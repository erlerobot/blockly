// Do not edit this file; automatically generated by build.py.
'use strict';


// Copyright 2012 Google Inc.  Apache License 2.0
Blockly.Python=new Blockly.Generator("Python");Blockly.Python.addReservedWords("and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,not,or,pass,print,raise,return,try,while,with,yield,True,False,None,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,abs,divmod,input,open,staticmethod,all,enumerate,int,ord,str,any,eval,isinstance,pow,sum,basestring,execfile,issubclass,print,super,bin,file,iter,property,tuple,bool,filter,len,range,type,bytearray,float,list,raw_input,unichr,callable,format,locals,reduce,unicode,chr,frozenset,long,reload,vars,classmethod,getattr,map,repr,xrange,cmp,globals,max,reversed,zip,compile,hasattr,memoryview,round,__import__,complex,hash,min,set,apply,delattr,help,next,setattr,buffer,dict,hex,object,slice,coerce,dir,id,oct,sorted,intern");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2;Blockly.Python.ORDER_FUNCTION_CALL=2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;Blockly.Python.PASS="  pass\n";
Blockly.Python.init=function(b){Blockly.Python.definitions_=Object.create(null);Blockly.Python.functionNames_=Object.create(null);Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);var a=[];b=Blockly.Variables.allVariables(b);for(var c=0;c<b.length;c++)a[c]=Blockly.Python.variableDB_.getName(b[c],Blockly.Variables.NAME_TYPE)+" = None";Blockly.Python.definitions_.variables=a.join("\n")};
Blockly.Python.finish=function(b){var a=[],c=[],d;for(d in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?a.push(e):c.push(e)}delete Blockly.Python.definitions_;delete Blockly.Python.functionNames_;Blockly.Python.variableDB_.reset();return(a.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+b};Blockly.Python.scrubNakedValue=function(b){return b+"\n"};
Blockly.Python.quote_=function(b){b=b.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\%/g,"\\%").replace(/'/g,"\\'");return"'"+b+"'"};
Blockly.Python.scrub_=function(b,a){var c="";if(!b.outputConnection||!b.outputConnection.targetConnection){var d=b.getCommentText();d&&(c+=Blockly.Python.prefixLines(d,"# ")+"\n");for(var e=0;e<b.inputList.length;e++)b.inputList[e].type==Blockly.INPUT_VALUE&&(d=b.inputList[e].connection.targetBlock())&&(d=Blockly.Python.allNestedComments(d))&&(c+=Blockly.Python.prefixLines(d,"# "))}e=b.nextConnection&&b.nextConnection.targetBlock();e=Blockly.Python.blockToCode(e);return c+a+e};Blockly.Python.math={};Blockly.Python.addReservedWords("math,random");Blockly.Python.math_number=function(b){b=parseFloat(b.getFieldValue("NUM"));return[b,0>b?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.math_arithmetic=function(b){var a={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]}[b.getFieldValue("OP")],c=a[0],a=a[1],d=Blockly.Python.valueToCode(b,"A",a)||"0";b=Blockly.Python.valueToCode(b,"B",a)||"0";return[d+c+b,a]};
Blockly.Python.math_single=function(b){var a=b.getFieldValue("OP"),c;if("NEG"==a)return c=Blockly.Python.valueToCode(b,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0",["-"+c,Blockly.Python.ORDER_UNARY_SIGN];Blockly.Python.definitions_.import_math="import math";b="SIN"==a||"COS"==a||"TAN"==a?Blockly.Python.valueToCode(b,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(b,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(a){case "ABS":c="math.fabs("+b+")";break;case "ROOT":c="math.sqrt("+
b+")";break;case "LN":c="math.log("+b+")";break;case "LOG10":c="math.log10("+b+")";break;case "EXP":c="math.exp("+b+")";break;case "POW10":c="math.pow(10,"+b+")";break;case "ROUND":c="round("+b+")";break;case "ROUNDUP":c="math.ceil("+b+")";break;case "ROUNDDOWN":c="math.floor("+b+")";break;case "SIN":c="math.sin("+b+" / 180.0 * math.pi)";break;case "COS":c="math.cos("+b+" / 180.0 * math.pi)";break;case "TAN":c="math.tan("+b+" / 180.0 * math.pi)"}if(c)return[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(a){case "ASIN":c=
"math.asin("+b+") / math.pi * 180";break;case "ACOS":c="math.acos("+b+") / math.pi * 180";break;case "ATAN":c="math.atan("+b+") / math.pi * 180";break;default:throw"Unknown math operator: "+a;}return[c,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constant=function(b){var a={PI:["math.pi",Blockly.Python.ORDER_MEMBER],E:["math.e",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.Python.ORDER_ATOMIC]};b=b.getFieldValue("CONSTANT");"INFINITY"!=b&&(Blockly.Python.definitions_.import_math="import math");return a[b]};
Blockly.Python.math_number_property=function(b){var a=Blockly.Python.valueToCode(b,"NUMBER_TO_CHECK",Blockly.Python.ORDER_MULTIPLICATIVE)||"0",c=b.getFieldValue("PROPERTY"),d;if("PRIME"==c)return Blockly.Python.definitions_.import_math="import math",d=Blockly.Python.provideFunction_("math_isPrime",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  # If n is not a number but a string, try parsing it.","  if type(n) not in (int, float, long):",
"    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:","      return False","  return True"])+"("+a+")",[d,Blockly.Python.ORDER_FUNCTION_CALL];
switch(c){case "EVEN":d=a+" % 2 == 0";break;case "ODD":d=a+" % 2 == 1";break;case "WHOLE":d=a+" % 1 == 0";break;case "POSITIVE":d=a+" > 0";break;case "NEGATIVE":d=a+" < 0";break;case "DIVISIBLE_BY":b=Blockly.Python.valueToCode(b,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE);if(!b||"0"==b)return["False",Blockly.Python.ORDER_ATOMIC];d=a+" % "+b+" == 0"}return[d,Blockly.Python.ORDER_RELATIONAL]};
Blockly.Python.math_change=function(b){var a=Blockly.Python.valueToCode(b,"DELTA",Blockly.Python.ORDER_ADDITIVE)||"0";b=Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return b+" = ("+b+" if type("+b+") in (int, float, long) else 0) + "+a+"\n"};Blockly.Python.math_round=Blockly.Python.math_single;Blockly.Python.math_trig=Blockly.Python.math_single;
Blockly.Python.math_on_list=function(b){var a=b.getFieldValue("OP");b=Blockly.Python.valueToCode(b,"LIST",Blockly.Python.ORDER_NONE)||"[]";switch(a){case "SUM":a="sum("+b+")";break;case "MIN":a="min("+b+")";break;case "MAX":a="max("+b+")";break;case "AVERAGE":a=Blockly.Python.provideFunction_("math_mean",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if type(e) in (int, float, long)]","  if not localList: return","  return float(sum(localList)) / len(localList)"]);
a=a+"("+b+")";break;case "MEDIAN":a=Blockly.Python.provideFunction_("math_median",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if type(e) in (int, float, long)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) / 2 - 1] + localList[len(localList) / 2]) / 2.0","  else:","    return localList[(len(localList) - 1) / 2]"]);a=a+"("+b+")";break;case "MODE":a=Blockly.Python.provideFunction_("math_modes",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:","        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])",
"  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);a=a+"("+b+")";break;case "STD_DEV":Blockly.Python.definitions_.import_math="import math";a=Blockly.Python.provideFunction_("math_standard_deviation",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)","  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);
a=a+"("+b+")";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";a="random.choice("+b+")";break;default:throw"Unknown operator: "+a;}return[a,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_modulo=function(b){var a=Blockly.Python.valueToCode(b,"DIVIDEND",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";b=Blockly.Python.valueToCode(b,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[a+" % "+b,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constrain=function(b){var a=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(b,"LOW",Blockly.Python.ORDER_NONE)||"0";b=Blockly.Python.valueToCode(b,"HIGH",Blockly.Python.ORDER_NONE)||"float('inf')";return["min(max("+a+", "+c+"), "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_random_int=function(b){Blockly.Python.definitions_.import_random="import random";var a=Blockly.Python.valueToCode(b,"FROM",Blockly.Python.ORDER_NONE)||"0";b=Blockly.Python.valueToCode(b,"TO",Blockly.Python.ORDER_NONE)||"0";return["random.randint("+a+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(b){Blockly.Python.definitions_.import_random="import random";return["random.random()",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.colour={};Blockly.Python.colour_picker=function(b){return["'"+b.getFieldValue("COLOUR")+"'",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(b){Blockly.Python.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_rgb=function(b){var a=Blockly.Python.provideFunction_("colour_rgb",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(b,"RED",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(b,"GREEN",Blockly.Python.ORDER_NONE)||0;b=Blockly.Python.valueToCode(b,"BLUE",Blockly.Python.ORDER_NONE)||
0;return[a+"("+c+", "+d+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_blend=function(b){var a=Blockly.Python.provideFunction_("colour_blend",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)",
"  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(b,"COLOUR1",Blockly.Python.ORDER_NONE)||"'#000000'",d=Blockly.Python.valueToCode(b,"COLOUR2",Blockly.Python.ORDER_NONE)||"'#000000'";b=Blockly.Python.valueToCode(b,"RATIO",Blockly.Python.ORDER_NONE)||0;return[a+"("+c+", "+d+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.procedures={};
Blockly.Python.procedures_defreturn=function(b){for(var a=Blockly.Variables.allVariables(b),c=a.length-1;0<=c;c--){var d=a[c];-1==b.arguments_.indexOf(d)?a[c]=Blockly.Python.variableDB_.getName(d,Blockly.Variables.NAME_TYPE):a.splice(c,1)}a=a.length?"  global "+a.join(", ")+"\n":"";c=Blockly.Python.variableDB_.getName(b.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE);d=Blockly.Python.statementToCode(b,"STACK");Blockly.Python.STATEMENT_PREFIX&&(d=Blockly.Python.prefixLines(Blockly.Python.STATEMENT_PREFIX.replace(/%1/g,"'"+
b.id+"'"),Blockly.Python.INDENT)+d);Blockly.Python.INFINITE_LOOP_TRAP&&(d=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+b.id+'"')+d);var e=Blockly.Python.valueToCode(b,"RETURN",Blockly.Python.ORDER_NONE)||"";e?e="  return "+e+"\n":d||(d=Blockly.Python.PASS);for(var g=[],f=0;f<b.arguments_.length;f++)g[f]=Blockly.Python.variableDB_.getName(b.arguments_[f],Blockly.Variables.NAME_TYPE);a="def "+c+"("+g.join(", ")+"):\n"+a+d+e;a=Blockly.Python.scrub_(b,a);Blockly.Python.definitions_[c]=a;return null};
Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;Blockly.Python.procedures_callreturn=function(b){for(var a=Blockly.Python.variableDB_.getName(b.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<b.arguments_.length;d++)c[d]=Blockly.Python.valueToCode(b,"ARG"+d,Blockly.Python.ORDER_NONE)||"None";return[a+"("+c.join(", ")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.procedures_callnoreturn=function(b){for(var a=Blockly.Python.variableDB_.getName(b.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<b.arguments_.length;d++)c[d]=Blockly.Python.valueToCode(b,"ARG"+d,Blockly.Python.ORDER_NONE)||"None";return a+"("+c.join(", ")+")\n"};
Blockly.Python.procedures_ifreturn=function(b){var a="if "+(Blockly.Python.valueToCode(b,"CONDITION",Blockly.Python.ORDER_NONE)||"False")+":\n";b.hasReturnValue_?(b=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"None",a+="  return "+b+"\n"):a+="  return\n";return a};Blockly.Python.texts={};Blockly.Python.text=function(b){return[Blockly.Python.quote_(b.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.text_join=function(b){var a;if(0==b.itemCount_)return["''",Blockly.Python.ORDER_ATOMIC];if(1==b.itemCount_)return a=Blockly.Python.valueToCode(b,"ADD0",Blockly.Python.ORDER_NONE)||"''",["str("+a+")",Blockly.Python.ORDER_FUNCTION_CALL];if(2==b.itemCount_)return a=Blockly.Python.valueToCode(b,"ADD0",Blockly.Python.ORDER_NONE)||"''",b=Blockly.Python.valueToCode(b,"ADD1",Blockly.Python.ORDER_NONE)||"''",["str("+a+") + str("+b+")",Blockly.Python.ORDER_UNARY_SIGN];a=[];for(var c=0;c<b.itemCount_;c++)a[c]=
Blockly.Python.valueToCode(b,"ADD"+c,Blockly.Python.ORDER_NONE)||"''";b=Blockly.Python.variableDB_.getDistinctName("temp_value",Blockly.Variables.NAME_TYPE);a="''.join([str("+b+") for "+b+" in ["+a.join(", ")+"]])";return[a,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_append=function(b){var a=Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);b=Blockly.Python.valueToCode(b,"TEXT",Blockly.Python.ORDER_NONE)||"''";return a+" = str("+a+") + str("+b+")\n"};
Blockly.Python.text_length=function(b){return["len("+(Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_isEmpty=function(b){return["not len("+(Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.text_indexOf=function(b){var a="FIRST"==b.getFieldValue("END")?"find":"rfind",c=Blockly.Python.valueToCode(b,"FIND",Blockly.Python.ORDER_NONE)||"''";return[(Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"."+a+"("+c+") + 1",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_charAt=function(b){var a=b.getFieldValue("WHERE")||"FROM_START",c=Blockly.Python.valueToCode(b,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1";b=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";switch(a){case "FIRST":return[b+"[0]",Blockly.Python.ORDER_MEMBER];case "LAST":return[b+"[-1]",Blockly.Python.ORDER_MEMBER];case "FROM_START":return c=Blockly.isNumber(c)?parseInt(c,10)-1:"int("+c+" - 1)",[b+"["+c+"]",Blockly.Python.ORDER_MEMBER];case "FROM_END":return[b+
"[-"+c+"]",Blockly.Python.ORDER_MEMBER];case "RANDOM":return Blockly.Python.definitions_.import_random="import random",a=Blockly.Python.provideFunction_("text_random_letter",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+b+")",[a,Blockly.Python.ORDER_FUNCTION_CALL]}throw"Unhandled option (text_charAt).";};
Blockly.Python.text_getSubstring=function(b){var a=Blockly.Python.valueToCode(b,"STRING",Blockly.Python.ORDER_MEMBER)||"''",c=b.getFieldValue("WHERE1"),d=b.getFieldValue("WHERE2"),e=Blockly.Python.valueToCode(b,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1";b=Blockly.Python.valueToCode(b,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==c||"FROM_START"==c&&"1"==e?e="":"FROM_START"==c?e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)":"FROM_END"==c&&(e=Blockly.isNumber(e)?-parseInt(e,10):"-int("+
e+")");"LAST"==d||"FROM_END"==d&&"1"==b?b="":"FROM_START"==c?b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")":"FROM_END"==c&&(Blockly.isNumber(b)?(b=1-parseInt(b,10),0==b&&(b="")):(Blockly.Python.definitions_.import_sys="import sys",b="int(1 - "+b+") or sys.maxsize"));return[a+"["+e+" : "+b+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_changeCase=function(b){var a={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[b.getFieldValue("CASE")];return[(Blockly.Python.valueToCode(b,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+a,Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_trim=function(b){var a={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[b.getFieldValue("MODE")];return[(Blockly.Python.valueToCode(b,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+a,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_print=function(b){return"print("+(Blockly.Python.valueToCode(b,"TEXT",Blockly.Python.ORDER_NONE)||"''")+")\n"};
Blockly.Python.text_prompt_ext=function(b){var a=Blockly.Python.provideFunction_("text_prompt",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),c=b.getField("TEXT")?Blockly.Python.quote_(b.getFieldValue("TEXT")):Blockly.Python.valueToCode(b,"TEXT",Blockly.Python.ORDER_NONE)||"''",a=a+"("+c+")";"NUMBER"==b.getFieldValue("TYPE")&&(a="float("+a+")");return[a,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_prompt=Blockly.Python.text_prompt_ext;/*


 Copyright 2015 Erle Robotics
 http://erlerobotics.com

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Python.rover={};Blockly.Python.rover_mode=function(b){b=b.getFieldValue("MODE");var a;a="import rospy\nfrom mavros_msgs.srv import SetMode\n";a+="rospy.wait_for_service('/mavros/set_mode')\n";a+="try:\n";a+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";a+=" mode='"+b.toString()+"'\n";a+=" resp1 = change_mode(0,mode)\n";a+="except rospy.ServiceException as e:\n";a+=' print ("Service call failed: %s" %e\n )';return a+="\n"};
Blockly.Python.rover_forward=function(b){var a=b.getFieldValue("SPEED");b=Blockly.Python.valueToCode(b,"TIME",Blockly.Python.ORDER_ATOMIC);var c;c="import rospy\nimport time\n";c+="from mavros_msgs.msg import OverrideRCIn\n";c+="from mavros_msgs.srv import SetMode\n";c+="throttle_channel=2\n";c+="steer_channel=0";c+="def talker():\n";c+=" pub = rospy.Publisher('mavros/rc/override', OverrideRCIn, queue_size=10)\n";c+=" r = rospy.Rate(10) #10hz\n";c+=" msg = OverrideRCIn()\n";c+=" start = time.time()\n";
c+=" speed='"+a.toString()+"'\n";c+=" exec_time="+b.toString()+"\n";c+=" flag=True #time flag\n";c+=" msg.channels[steer_channel]=1370\n";c+=" if speed =='SLOW':\n";c+="  msg.channels[throttle_channel]=1560\n";c+=" elif speed =='NORMAL':\n";c+="  msg.channels[throttle_channel]=1565\n";c+=" elif speed == 'FAST':\n";c+="  msg.channels[throttle_channel]=1570\n";c+=" while not rospy.is_shutdown() and flag:\n";c+="  sample_time=time.time()\n";c+="  if ((sample_time - start) > exec_time):\n";c+="   flag=False\n";
c+="  rospy.loginfo(msg)\n";c+="  pub.publish(msg)\n";c+="  r.sleep()\n";c+="if __name__ == '__main__':\n";c+=" rospy.wait_for_service('/mavros/set_mode')\n";c+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";c+=" resp1 = change_mode(custom_mode='manual')\n";c+=" print (resp1)\n";c+=" if 'True' in str(resp1):\n";c+="  try:\n";c+="   talker()\n";c+="  except rospy.ROSInterruptException: pass\n";return c+="\n"};
Blockly.Python.rover_steering=function(b){b=b.getFieldValue("direction");var a;a="import rospy\nimport time\n";a+="from mavros_msgs.msg import OverrideRCIn\n";a+="from mavros_msgs.srv import SetMode\n";a+="throttle_channel=2\n";a+="steer_channel=0\n";a+="exec_time=1 #exec time in secs\n";a+="def talker_steering():\n";a+=" pub = rospy.Publisher('mavros/rc/override', OverrideRCIn, queue_size=10)\n";a+=" r = rospy.Rate(10) #10hz\n";a+=" msg = OverrideRCIn()\n";a+=" start = time.time()\n";a+=" flag=True #time flag\n";
a+=" direction='"+b.toString()+"'\n";a+=" if direction =='STRAIGHT':\n";a+="  msg.channels[steer_channel]=1385\n";a+=" elif direction =='RIGHT':\n";a+="  msg.channels[steer_channel]=1450\n";a+=" elif direction == 'LEFT':\n";a+="  msg.channels[steer_channel]=1250\n";a+=" while not rospy.is_shutdown() and flag:\n";a+="  sample_time=time.time()\n";a+="  if ((sample_time - start) > exec_time):\n";a+="   flag=False\n";a+="  rospy.loginfo(msg)\n";a+="  pub.publish(msg)\n";a+="  r.sleep()\n";a+="if __name__ == '__main__':\n";
a+=" rospy.wait_for_service('/mavros/set_mode')\n";a+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";a+=" resp2 = change_mode(custom_mode='manual')\n";a+=" print (resp2)\n";a+=" if 'True' in str(resp2):\n";a+="  try:\n";a+="   talker_steering()\n";a+="  except rospy.ROSInterruptException: pass\n";return a+="\n"};
Blockly.Python.rover_control=function(b){var a=b.getFieldValue("direction"),c=b.getFieldValue("speed");b=Blockly.Python.valueToCode(b,"seconds",Blockly.Python.ORDER_ATOMIC);var d;d="import rospy\nimport time\n";d+="from mavros_msgs.msg import OverrideRCIn\n";d+="from mavros_msgs.srv import SetMode\n";d+="throttle_channel=2\n";d+="steer_channel=0\n";d+="\n";d+="def talker():\n";d+=" pub = rospy.Publisher('mavros/rc/override', OverrideRCIn, queue_size=10)\n";d+=" r = rospy.Rate(10) #10hz\n";d+=" msg = OverrideRCIn()\n";
d+=" start = time.time()\n";d+=" speed='"+c.toString()+"'\n";d+=" exec_time="+b.toString()+"\n";d+=" flag=True #time flag\n";d+=" if speed =='SLOW':\n";d+="  msg.channels[throttle_channel]=1558\n";d+=" elif speed =='NORMAL':\n";d+="  msg.channels[throttle_channel]=1565\n";d+=" elif speed == 'FAST':\n";d+="  msg.channels[throttle_channel]=1570\n";d+=" direction='"+a.toString()+"'\n";d+=" if direction =='STRAIGHT':\n";d+="  msg.channels[steer_channel]=1385\n";d+=" elif direction =='RIGHT':\n";d+="  msg.channels[steer_channel]=1450\n";
d+=" elif direction == 'LEFT':\n";d+="  msg.channels[steer_channel]=1300\n";d+=" while not rospy.is_shutdown() and flag:\n";d+="  sample_time=time.time()\n";d+="  if ((sample_time - start) > exec_time):\n";d+="   flag=False\n";d+="  rospy.loginfo(msg)\n";d+="  pub.publish(msg)\n";d+="  r.sleep()\n";d+="\n";d+="if __name__ == '__main__':\n";d+=" rospy.wait_for_service('/mavros/set_mode')\n";d+=" change_mode = rospy.ServiceProxy('/mavros/set_mode', SetMode)\n";d+=" resp1 = change_mode(custom_mode='manual')\n";
d+=" print (resp1)\n";d+=" if 'True' in str(resp1):\n";d+="  try:\n";d+="   talker()\n";d+="  except rospy.ROSInterruptException: pass\n";return d+="\n"};Blockly.Python.spider={};
Blockly.Python.spider_standup_down=function(b){b="import sys\nimport time\n";b+="from crab_msgs.msg import apm_imu\n";b+="from crab_msgs.msg import BodyCommand\n";b+="from crab_msgs.msg import BodyState\n";b+="from crab_msgs.msg import GaitCommand\n";b+="from crab_msgs.msg import LegIKRequest\n";b+="from crab_msgs.msg import LegJointsState\n";b+="from crab_msgs.msg import LegPositionState\n";b+="from crab_msgs.msg import LegsJointsState\n";b+="from sensor_msgs.msg import Joy\n";b+="\n";b+="standup_time=20\n";
b+="\n";b+="################\n";b+="## INITIALIZE ##\n";b+="################ \n";b+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";b+="msg = Joy()\n";b+="msg.header.stamp = rospy.Time.now()\n";b+="rate = rospy.Rate(10)\n";b+="\n";b+="valueAxe = 0.0\n";b+="valueButton = 0\n";b+="for i in range (0, 20):\n";b+="\tmsg.axes.append(valueAxe)\n";b+="for e in range (0, 17):\n";b+="\tmsg.buttons.append(valueButton)\n";b+="\n";b+="\n";b+="####################\n";b+="## STAND UP \t  ##\n";b+="####################\n";
b+="msg.buttons[3] = 1\n";b+="i=0\n";b+="bo=True\n";b+="standup_time=standup_time/3\n";b+="while not rospy.is_shutdown() and bo:\n";b+="\ti=i+1\n";b+="\tif (i>standup_time):\n";b+="\t  bo=False\n";b+="\t  msg.buttons[3] = 0\n";b+="\tpub.publish(msg)\n";b+="\trate.sleep()\n";return b+="time.sleep(2)\n"};
Blockly.Python.spider_forward=function(b){b=b.getFieldValue("FORWARD_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## FORWARD \t##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[1] =  1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[1] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};
Blockly.Python.spider_backwards=function(b){b=b.getFieldValue("BACKWARDS_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## BACKWARDS   ##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[1] =  -1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[1] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};
Blockly.Python.spider_right=function(b){b=b.getFieldValue("RIGHT_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## RIGHT   ##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[0] = -1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[0] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};
Blockly.Python.spider_left=function(b){b=b.getFieldValue("LEFT_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## LEFT   ##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[0] = 1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[0] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};
Blockly.Python.spider_turn_right=function(b){b=b.getFieldValue("TURN_RIGHT_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## TURN RIGHT   ##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[2] = -1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[2] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};
Blockly.Python.spider_turn_left=function(b){b=b.getFieldValue("TURN_LEFT_SECS");var a;a="import sys\nimport time\n";a+="from crab_msgs.msg import apm_imu\n";a+="from crab_msgs.msg import BodyCommand\n";a+="from crab_msgs.msg import BodyState\n";a+="from crab_msgs.msg import GaitCommand\n";a+="from crab_msgs.msg import LegIKRequest\n";a+="from crab_msgs.msg import LegJointsState\n";a+="from crab_msgs.msg import LegPositionState\n";a+="from crab_msgs.msg import LegsJointsState\n";a+="from sensor_msgs.msg import Joy\n";
a+="\n";a+="walking_time="+b.toString()+"\n";a+="\n";a+="################\n";a+="## INITIALIZE ##\n";a+="################ \n";a+="pub = rospy.Publisher('/joy', Joy, queue_size=10)\n";a+="msg = Joy()\n";a+="msg.header.stamp = rospy.Time.now()\n";a+="rate = rospy.Rate(10)\n";a+="\n";a+="valueAxe = 0.0\n";a+="valueButton = 0\n";a+="for i in range (0, 20):\n";a+="\tmsg.axes.append(valueAxe)\n";a+="for e in range (0, 17):\n";a+="\tmsg.buttons.append(valueButton)\n";a+="\n";a+="\n";a+="#################\n";
a+="## TURN LEFT   \t  ##\n";a+="#################\n";a+="start = time.time()\n";a+="msg.axes[2] = 1\n";a+="bo=True\n";a+="while not rospy.is_shutdown() and bo:\n";a+="\tsample_time = time.time()\n";a+="\tif ((sample_time - start) > walking_time):\n";a+="\t  bo=False\n";a+="\t  msg.axes[2] = 0\n";a+="\tpub.publish(msg)\n";return a+="\trate.sleep()\n"};Blockly.Python.spider_turn_right_degrees=function(b){return"EB2__erle_spider__spider_turn_right_degrees?"+b.getFieldValue("DEGREES")+"\n"};Blockly.Python.variables={};Blockly.Python.variables_get=function(b){return[Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables_set=function(b){var a=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"0";return Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+a+"\n"};Blockly.Python.logic={};
Blockly.Python.controls_if=function(b){for(var a=0,c=Blockly.Python.valueToCode(b,"IF"+a,Blockly.Python.ORDER_NONE)||"False",d=Blockly.Python.statementToCode(b,"DO"+a)||Blockly.Python.PASS,e="if "+c+":\n"+d,a=1;a<=b.elseifCount_;a++)c=Blockly.Python.valueToCode(b,"IF"+a,Blockly.Python.ORDER_NONE)||"False",d=Blockly.Python.statementToCode(b,"DO"+a)||Blockly.Python.PASS,e+="elif "+c+":\n"+d;b.elseCount_&&(d=Blockly.Python.statementToCode(b,"ELSE")||Blockly.Python.PASS,e+="else:\n"+d);return e};
Blockly.Python.logic_compare=function(b){var a={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[b.getFieldValue("OP")],c=Blockly.Python.ORDER_RELATIONAL,d=Blockly.Python.valueToCode(b,"A",c)||"0";b=Blockly.Python.valueToCode(b,"B",c)||"0";return[d+" "+a+" "+b,c]};
Blockly.Python.logic_operation=function(b){var a="AND"==b.getFieldValue("OP")?"and":"or",c="and"==a?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,d=Blockly.Python.valueToCode(b,"A",c);b=Blockly.Python.valueToCode(b,"B",c);if(d||b){var e="and"==a?"True":"False";d||(d=e);b||(b=e)}else b=d="False";return[d+" "+a+" "+b,c]};Blockly.Python.logic_negate=function(b){return["not "+(Blockly.Python.valueToCode(b,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"True"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.logic_boolean=function(b){return["TRUE"==b.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(b){return["None",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.logic_ternary=function(b){var a=Blockly.Python.valueToCode(b,"IF",Blockly.Python.ORDER_CONDITIONAL)||"False",c=Blockly.Python.valueToCode(b,"THEN",Blockly.Python.ORDER_CONDITIONAL)||"None";b=Blockly.Python.valueToCode(b,"ELSE",Blockly.Python.ORDER_CONDITIONAL)||"None";return[c+" if "+a+" else "+b,Blockly.Python.ORDER_CONDITIONAL]};Blockly.Python.brain={};
Blockly.Python.get_laser=function(b){b=Blockly.Python.valueToCode(b,"laser",Blockly.Python.ORDER_ATOMIC);var a;a="import rospy\nimport subprocess\n";a+="import rosnode\n";a+="from sensor_msgs.msg import Range\n";a+="ros_nodes = rosnode.get_node_names()\n";a+="if not '/lrm30_node' in ros_nodes:\n";a+="  command='/home/erle/spider_ws/install_isolated/lib/lrm30_ros/lrm30'\n";a+="  process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";a+="msg_laser = rospy.wait_for_message('/lrm30_data', Range, timeout=1)\n";return a+
b+" = msg_laser.range\n"};Blockly.Python.take_a_picture=function(b){b="import rospy\nimport subprocess\n";b+="import rosnode\n";b+="ros_nodes = rosnode.get_node_names()\n";b+="if '/raspicam_node' in ros_nodes:\n";b+="  command='rosservice call /camera/start_capture'\n";b+="  process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";b+="command='python2 /home/erle/take_a_picture.py'\n";return b+="process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n"};
Blockly.Python.turn_on_blue_led=function(b){b=b.getFieldValue("BLUE_LED");var a;a="#!/usr/bin/python\nimport rospy\n";a+="import time\n";a+="import rosnode\n";a+="import subprocess\n";a+="from std_msgs.msg import String\n";a+="\n";a+="def talker():\n";a+="  pub = rospy.Publisher('/statusleds', String, queue_size=10)\n";a+="  rate = rospy.Rate(10)\n";a+="  start = time.time()\n";a+="  flag=True #time flag\n";a+="  led='"+b.toString()+"'\n";a+="  if (led == 'TRUE'):\n";a+="    msg = 'blue'\n";a+="  else:\n";
a+="    msg = 'blue_off'\n";a+="  while not rospy.is_shutdown() and flag:\n";a+="    sample_time=time.time()\n";a+="    if ((sample_time - start) > 1):\n";a+="      flag=False\n";a+="    pub.publish(msg)\n";a+="    rate.sleep()\n";a+="if __name__ == '__main__':\n";a+="  ros_nodes = rosnode.get_node_names()\n";a+="  if not '/erle_statusleds' in ros_nodes:\n";a+="    command='python /home/erle/spider_ws/src/ros_erle_statusled/scripts/statusleds.py'\n";a+="    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)\n";
return a+="  talker()\n"};Blockly.Python.turn_on_orange_led=function(b){return"EB2__erle_brain__turn_on_orange_led?'"+b.getFieldValue("ORANGE_LED")+"'\n"};
Blockly.Python.get_orientation=function(b){var a=Blockly.Python.valueToCode(b,"OrientationW",Blockly.Python.ORDER_ATOMIC),c=Blockly.Python.valueToCode(b,"OrientationX",Blockly.Python.ORDER_ATOMIC),d=Blockly.Python.valueToCode(b,"OrientationY",Blockly.Python.ORDER_ATOMIC);b=Blockly.Python.valueToCode(b,"OrientationZ",Blockly.Python.ORDER_ATOMIC);return"EB2__erle_brain__get_orientation?'"+a+"'&'"+c+"'&'"+d+"'&'"+b+"'\n"};Blockly.Python.calibrate_imu=function(b){return"EB2__erle_brain__calibrate_imu?\n"};Blockly.Python.lists={};Blockly.Python.lists_create_empty=function(b){return["[]",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lists_create_with=function(b){for(var a=Array(b.itemCount_),c=0;c<b.itemCount_;c++)a[c]=Blockly.Python.valueToCode(b,"ADD"+c,Blockly.Python.ORDER_NONE)||"None";a="["+a.join(", ")+"]";return[a,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lists_repeat=function(b){var a=Blockly.Python.valueToCode(b,"ITEM",Blockly.Python.ORDER_NONE)||"None";b=Blockly.Python.valueToCode(b,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return["["+a+"] * "+b,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.lists_length=function(b){return["len("+(Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_isEmpty=function(b){return["not len("+(Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.lists_indexOf=function(b){var a=Blockly.Python.valueToCode(b,"FIND",Blockly.Python.ORDER_NONE)||"[]",c=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";return[("FIRST"==b.getFieldValue("END")?Blockly.Python.provideFunction_("first_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList, elem):","  try: theIndex = myList.index(elem) + 1","  except: theIndex = 0","  return theIndex"]):Blockly.Python.provideFunction_("last_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+
"(myList, elem):","  try: theIndex = len(myList) - myList[::-1].index(elem)","  except: theIndex = 0","  return theIndex"]))+"("+c+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_getIndex=function(b){var a=b.getFieldValue("MODE")||"GET",c=b.getFieldValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(b,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1";b=Blockly.Python.valueToCode(b,"VALUE",Blockly.Python.ORDER_MEMBER)||"[]";if("FIRST"==c){if("GET"==a)return[b+"[0]",Blockly.Python.ORDER_MEMBER];c=b+".pop(0)";if("GET_REMOVE"==a)return[c,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return c+"\n"}else if("LAST"==c){if("GET"==a)return[b+"[-1]",Blockly.Python.ORDER_MEMBER];
c=b+".pop()";if("GET_REMOVE"==a)return[c,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return c+"\n"}else if("FROM_START"==c){d=Blockly.isNumber(d)?parseInt(d,10)-1:"int("+d+" - 1)";if("GET"==a)return[b+"["+d+"]",Blockly.Python.ORDER_MEMBER];c=b+".pop("+d+")";if("GET_REMOVE"==a)return[c,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return c+"\n"}else if("FROM_END"==c){if("GET"==a)return[b+"[-"+d+"]",Blockly.Python.ORDER_MEMBER];c=b+".pop(-"+d+")";if("GET_REMOVE"==a)return[c,Blockly.Python.ORDER_FUNCTION_CALL];
if("REMOVE"==a)return c+"\n"}else if("RANDOM"==c){Blockly.Python.definitions_.import_random="import random";if("GET"==a)return["random.choice("+b+")",Blockly.Python.ORDER_FUNCTION_CALL];c=Blockly.Python.provideFunction_("lists_remove_random_item",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+b+")";if("GET_REMOVE"==a)return[c,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return c+"\n"}throw"Unhandled combination (lists_getIndex).";
};
Blockly.Python.lists_setIndex=function(b){var a=Blockly.Python.valueToCode(b,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",c=b.getFieldValue("MODE")||"GET",d=b.getFieldValue("WHERE")||"FROM_START",e=Blockly.Python.valueToCode(b,"AT",Blockly.Python.ORDER_NONE)||"1";b=Blockly.Python.valueToCode(b,"TO",Blockly.Python.ORDER_NONE)||"None";if("FIRST"==d){if("SET"==c)return a+"[0] = "+b+"\n";if("INSERT"==c)return a+".insert(0, "+b+")\n"}else if("LAST"==d){if("SET"==c)return a+"[-1] = "+b+"\n";if("INSERT"==c)return a+
".append("+b+")\n"}else if("FROM_START"==d){e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)";if("SET"==c)return a+"["+e+"] = "+b+"\n";if("INSERT"==c)return a+".insert("+e+", "+b+")\n"}else if("FROM_END"==d){if("SET"==c)return a+"[-"+e+"] = "+b+"\n";if("INSERT"==c)return a+".insert(-"+e+", "+b+")\n"}else if("RANDOM"==d){Blockly.Python.definitions_.import_random="import random";a.match(/^\w+$/)?d="":(d=Blockly.Python.variableDB_.getDistinctName("tmp_list",Blockly.Variables.NAME_TYPE),e=d+" = "+
a+"\n",a=d,d=e);e=Blockly.Python.variableDB_.getDistinctName("tmp_x",Blockly.Variables.NAME_TYPE);d+=e+" = int(random.random() * len("+a+"))\n";if("SET"==c)return d+(a+"["+e+"] = "+b+"\n");if("INSERT"==c)return d+=a+".insert("+e+", "+b+")\n"}throw"Unhandled combination (lists_setIndex).";};
Blockly.Python.lists_getSublist=function(b){var a=Blockly.Python.valueToCode(b,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",c=b.getFieldValue("WHERE1"),d=b.getFieldValue("WHERE2"),e=Blockly.Python.valueToCode(b,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1";b=Blockly.Python.valueToCode(b,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==c||"FROM_START"==c&&"1"==e?e="":"FROM_START"==c?e=Blockly.isNumber(e)?parseInt(e,10)-1:"int("+e+" - 1)":"FROM_END"==c&&(e=Blockly.isNumber(e)?-parseInt(e,10):"-int("+e+")");
"LAST"==d||"FROM_END"==d&&"1"==b?b="":"FROM_START"==c?b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")":"FROM_END"==c&&(Blockly.isNumber(b)?(b=1-parseInt(b,10),0==b&&(b="")):(Blockly.Python.definitions_.import_sys="import sys",b="int(1 - "+b+") or sys.maxsize"));return[a+"["+e+" : "+b+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.lists_split=function(b){var a=b.getFieldValue("MODE");if("SPLIT"==a)a=Blockly.Python.valueToCode(b,"INPUT",Blockly.Python.ORDER_MEMBER)||"''",b=Blockly.Python.valueToCode(b,"DELIM",Blockly.Python.ORDER_NONE),b=a+".split("+b+")";else if("JOIN"==a)a=Blockly.Python.valueToCode(b,"INPUT",Blockly.Python.ORDER_NONE)||"[]",b=Blockly.Python.valueToCode(b,"DELIM",Blockly.Python.ORDER_MEMBER)||"''",b=b+".join("+a+")";else throw"Unknown mode: "+a;return[b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.loops={};Blockly.Python.controls_repeat_ext=function(b){var a=b.getField("TIMES")?String(parseInt(b.getFieldValue("TIMES"),10)):Blockly.Python.valueToCode(b,"TIMES",Blockly.Python.ORDER_NONE)||"0",a=Blockly.isNumber(a)?parseInt(a,10):"int("+a+")",c=Blockly.Python.statementToCode(b,"DO"),c=Blockly.Python.addLoopTrap(c,b.id)||Blockly.Python.PASS;return"for "+Blockly.Python.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+a+"):\n"+c};
Blockly.Python.controls_repeat=Blockly.Python.controls_repeat_ext;Blockly.Python.controls_whileUntil=function(b){var a="UNTIL"==b.getFieldValue("MODE"),c=Blockly.Python.valueToCode(b,"BOOL",a?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||"False",d=Blockly.Python.statementToCode(b,"DO"),d=Blockly.Python.addLoopTrap(d,b.id)||Blockly.Python.PASS;a&&(c="not "+c);return"while "+c+":\n"+d};
Blockly.Python.controls_for=function(b){var a=Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(b,"FROM",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(b,"TO",Blockly.Python.ORDER_NONE)||"0",e=Blockly.Python.valueToCode(b,"BY",Blockly.Python.ORDER_NONE)||"1",g=Blockly.Python.statementToCode(b,"DO"),g=Blockly.Python.addLoopTrap(g,b.id)||Blockly.Python.PASS,f="",h=function(){return Blockly.Python.provideFunction_("upRange",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])},k=function(){return Blockly.Python.provideFunction_("downRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};b=function(a,b,c){return"("+a+" <= "+b+") and "+h()+"("+a+", "+b+", "+c+") or "+k()+"("+a+", "+b+", "+c+")"};if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&
Blockly.isNumber(e))c=parseFloat(c),d=parseFloat(d),e=Math.abs(parseFloat(e)),0===c%1&&0===d%1&&0===e%1?(c<=d?(d++,b=0==c&&1==e?d:c+", "+d,1!=e&&(b+=", "+e)):(d--,b=c+", "+d+", -"+e),b="range("+b+")"):(b=c<d?h():k(),b+="("+c+", "+d+", "+e+")");else{var l=function(b,c){if(Blockly.isNumber(b))b=parseFloat(b);else if(b.match(/^\w+$/))b="float("+b+")";else{var d=Blockly.Python.variableDB_.getDistinctName(a+c,Blockly.Variables.NAME_TYPE);f+=d+" = float("+b+")\n";b=d}return b},c=l(c,"_start"),d=l(d,"_end");
l(e,"_inc");b="number"==typeof c&&"number"==typeof d?c<d?h(c,d,e):k(c,d,e):b(c,d,e)}return f+="for "+a+" in "+b+":\n"+g};Blockly.Python.controls_forEach=function(b){var a=Blockly.Python.variableDB_.getName(b.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(b,"LIST",Blockly.Python.ORDER_RELATIONAL)||"[]",d=Blockly.Python.statementToCode(b,"DO"),d=Blockly.Python.addLoopTrap(d,b.id)||Blockly.Python.PASS;return"for "+a+" in "+c+":\n"+d};
Blockly.Python.controls_flow_statements=function(b){switch(b.getFieldValue("FLOW")){case "BREAK":return"break\n";case "CONTINUE":return"continue\n"}throw"Unknown flow statement.";};